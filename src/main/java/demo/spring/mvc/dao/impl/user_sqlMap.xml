<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd" >

<sqlMap namespace="demo.spring.mvc.entity.User">

    <resultMap class="demo.spring.mvc.entity.User" id="BaseResultMap">
        <result property="id" column="id" />
        <result property="username" column="username" />
        <result property="password" column="password" />
        <result property="realName" column="real_name" />
        <result property="modifyTime" column="modify_time" />
        <result property="creationTime" column="creation_time" />
    </resultMap>

    <select id="find" resultMap="BaseResultMap" parameterClass="com.shunwang.framework.ibatis.query.ConditionQuery">
        <isNotEqual property="rp" compareValue="0">
            SELECT t0.* FROM (
        </isNotEqual>
        select row_number() over(order by
        <isNotNull property="orderCol">
            $orderCol$
        </isNotNull>
        <isNull property="orderCol">
            id
        </isNull>
        ) row,
        t.id, t.username, t.password, t.real_name, t.modify_time, t.creation_time from demo_user t
        <isParameterPresent>
            <include refid="Example_Where_Clause" />
        </isParameterPresent>
        <isNotEqual property="rp" compareValue="0">
            ) t0 WHERE t0.row BETWEEN (#firstResult:INTEGER#+1) AND
            (#firstResult:INTEGER#+#rp:INTEGER#)
        </isNotEqual>
    </select>

    <select id="findCnt" parameterClass="com.shunwang.framework.ibatis.query.ConditionQuery" resultClass="java.lang.Integer">
        select count(1) from demo_user t
        <include refid="Example_Where_Clause" />
    </select>

    <select id="get" resultMap="BaseResultMap" parameterClass="java.lang.Integer">
        select id, username, password, real_name, modify_time, creation_time
        from demo_user where id = #value#
    </select>

    <insert id="insert">
        insert into demo_user(username, password, real_name, modify_time, creation_time)
        values(#username#, #password#, #realName#, #modifyTime#, #creationTime#)
        <selectKey resultClass="java.lang.Integer" keyProperty="id">
            SELECT @@IDENTITY
        </selectKey>
    </insert>

    <update id="update">
        update demo_user set username = #username#, real_name = #realName#, modify_time = #modifyTime#
        where id = #id#
    </update>

    <update id="updatePassword">
        update demo_user set password = #password#, modify_time = #modifyTime# where id = #id#
    </update>

    <delete id="delete">
        delete from demo_user where id = #id#
    </delete>

    <delete id="deleteUsers" parameterClass="list">
        delete from demo_user
        where id in
        <dynamic>
            <iterate open="(" close=")" conjunction=", ">#value[]#</iterate>
        </dynamic>
    </delete>

</sqlMap>

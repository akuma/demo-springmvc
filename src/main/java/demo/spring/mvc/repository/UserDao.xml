<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="demo.spring.mvc.repository.UserDao">

    <sql id="userColumns">
        id, username, password, real_name as realName, birthday, modify_time as modifyTime, creation_time as creationTime
    </sql>

    <sql id="userCondition">
        <where>
            <if test="id != null">
                id = #{id}
            </if>
            <if test="username != null">
                and username = #{username}
            </if>
            <if test="password != null">
                and password = #{password}
            </if>
            <if test="realName != null">
                and real_name = #{realName}
            </if>
        </where>
    </sql>

    <select id="find" parameterType="int" resultType="User">
        select <include refid="userColumns" />
        from demo_user where id = #{value}
    </select>

    <select id="findByEntity" parameterType="User" resultType="User">
        select <include refid="userColumns" />
        from demo_user
        <include refid="userCondition" />
    </select>

    <select id="findByParamWithPage" parameterType="map" resultType="User">
        select <include refid="userColumns" />
        from demo_user
        <where>
            <if test="param1.password != null">
                password like #{param1.password}
            </if>
            <if test="param1.realName != null">
                and real_name like #{param1.realName}
            </if>
        </where>
    </select>

    <select id="findMap" resultType="hashmap">
        select <include refid="userColumns" />
        from demo_user
        where id in
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </select>

    <select id="findMapByUsername" parameterType="string" resultType="hashmap">
        select <include refid="userColumns" />
        from demo_user
        where username in
        <foreach item="username" collection="array" open="(" separator="," close=")">
            #{username}
        </foreach>
    </select>

    <insert id="insert" parameterType="User" useGeneratedKeys="true" keyProperty="id">
        insert into demo_user(username, password, real_name, birthday, creation_time)
        values(#{username}, #{password}, #{realName}, #{birthday}, null)
    </insert>

    <update id="update" parameterType="User">
        update demo_user
        set username = #{username}, password = #{password}, real_name = #{realName}, birthday = #{birthday}
        where id = #{id}
    </update>

    <update id="updateIfPossible" parameterType="User">
        update demo_user
        <set>
            <if test="username != null">username = #{username},</if>
            <if test="password != null">password = #{password},</if>
            <if test="realName != null">real_name = #{realName},</if>
            <if test="birthday != null">birthday = #{birthday}</if>
        </set>
        where id = #{id}
    </update>

    <!-- 使用 id 数组删除 -->
    <delete id="delete">
        delete from demo_user where id in
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

    <!-- 使用 id 列表删除 -->
    <delete id="deleteByIdList">
        delete from demo_user where id in
        <foreach item="id" collection="list" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

</mapper>

<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:p="http://www.springframework.org/schema/p" xmlns:context="http://www.springframework.org/schema/context"
    xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:util="http://www.springframework.org/schema/util" xmlns:cache="http://www.springframework.org/schema/cache"
    xsi:schemaLocation="http://www.springframework.org/schema/beans 
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx.xsd
        http://www.springframework.org/schema/util
        http://www.springframework.org/schema/util/spring-util.xsd
        http://www.springframework.org/schema/cache
        http://www.springframework.org/schema/cache/spring-cache.xsd">

    <description>Spring 公共配置</description>

    <context:property-placeholder location="classpath:application.properties,classpath:jdbc.properties" />
    <util:properties id="appProperties" location="classpath:application.properties" />

    <!-- 配置自动扫描且不扫描 @Controller -->
    <context:component-scan base-package="demo.spring.mvc">
        <context:exclude-filter type="annotation"
            expression="org.springframework.stereotype.Controller" />
    </context:component-scan>

    <aop:aspectj-autoproxy />

    <aop:config>
        <aop:pointcut id="serviceMethods" expression="execution(* demo.spring.mvc.service..*.*(..))" />
        <aop:advisor advice-ref="txAdvice" pointcut-ref="serviceMethods" />
    </aop:config>

    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <!-- Set query transaction timeout -->
            <tx:method name="get*" propagation="SUPPORTS" timeout="10" read-only="true" />
            <tx:method name="has*" propagation="SUPPORTS" timeout="10" read-only="true" />
            <tx:method name="query*" propagation="SUPPORTS" timeout="10" read-only="true" />
            <tx:method name="search*" propagation="SUPPORTS" timeout="10" read-only="true" />
            <!-- Set update transaction timeout -->
            <tx:method name="*" propagation="REQUIRED" timeout="30" />
        </tx:attributes>
    </tx:advice>

    <!-- Declare a transaction manager -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager"
        p:dataSource-ref="dataSource" />

    <!-- Declare a datasource that has pooling capabilities -->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close"
        p:driverClass="${jdbc.driverClassName}" p:jdbcUrl="${jdbc.url}" p:user="${jdbc.username}"
        p:password="${jdbc.password}" p:loginTimeout="${jdbc.loginTimeout}" p:acquireIncrement="${jdbc.acquireIncrement}"
        p:idleConnectionTestPeriod="${jdbc.idleConnectionTestPeriod}" p:maxPoolSize="${jdbc.maxPoolSize}"
        p:minPoolSize="${jdbc.minPoolSize}" p:maxStatements="${jdbc.maxStatements}" />

    <!-- MyBatis config -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="demo.spring.mvc.dao" />
        <property name="annotationClass" value="com.guomi.meazza.orm.mybatis.MyBatisRepository" />
    </bean>

    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <property name="typeAliasesPackage" value="demo.spring.mvc.entity" />
        <property name="configLocation" value="classpath:mybatis.xml" />
    </bean>

    <bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
        <constructor-arg index="0" ref="sqlSessionFactory" />
        <constructor-arg index="1" value="BATCH" />
    </bean>

</beans>
